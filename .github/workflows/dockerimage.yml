name: VKS - build, push and deploy.
on:
  push:
    branches:
    - master
jobs:
  build:
   runs-on: ubuntu-latest
   steps:
#    - uses: azure/container-actions/docker-login@master
#      with:
#        login-server: docker.pkg.github.com/v2
#        username: ${{ secrets.DOCKER_USERNAME }}
#        password: ${{ secrets.DOCKER_PASSWORD }}
   - uses: olegchorny/actions/vks-set-context@master
     env:
       OS_AUTH_URL: ${{ secrets.AUTH_URL }}
       OS_PROJECT_ID: ${{ secrets.PROJECT_ID }}
       OS_PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
       OS_USER_DOMAIN_NAME: ${{ secrets.USER_DOMAIN_NAME }}
       OS_PROJECT_DOMAIN_ID: ${{ secrets.PROJECT_DOMAIN_ID }}
       OS_USERNAME: ${{ secrets.USERNAME}}
       OS_PASSWORD: ${{ secrets.PASSWORD }}
       OS_REGION_NAME: ${{ secrets.REGION_NAME }}
       OS_INTERFACE: public
       OS_IDENTITY_API_VERSION: 3
   
   #
   - uses: actions/checkout@master
   - name: Build
     run: |
       sha=${GITHUB_SHA:0:7}
       app="${GITHUB_REPOSITORY#*/}"
       docker build -t docker.pkg.github.com/$GITHUB_REPOSITORY/$app:$sha .
   - name: Push
     run: |
       sha=${GITHUB_SHA:0:7}
       app="${GITHUB_REPOSITORY#*/}"
       docker login docker.pkg.github.com -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
       docker push docker.pkg.github.com/$GITHUB_REPOSITORY/$app:$sha
#    - name: OpenStack
#      run: |
#         sudo pip install wheel
#         sudo pip install python-openstackclient
#         sudo pip install python-magnumclient
#         export OS_AUTH_URL=${{ secrets.AUTH_URL }}
#         export OS_PROJECT_ID=${{ secrets.PROJECT_ID }}
#         export OS_PROJECT_NAME=${{ secrets.PROJECT_NAME }}
#         export OS_USER_DOMAIN_NAME=${{ secrets.USER_DOMAIN_NAME }}
#         if [ -z "$OS_USER_DOMAIN_NAME" ]; then unset OS_USER_DOMAIN_NAME; fi
#         export OS_PROJECT_DOMAIN_ID=${{ secrets.PROJECT_DOMAIN_ID }}
#         if [ -z "$OS_PROJECT_DOMAIN_ID" ]; then unset OS_PROJECT_DOMAIN_ID; fi
#         unset OS_TENANT_ID
#         unset OS_TENANT_NAME
#         export OS_USERNAME=${{ secrets.USERNAME }}
#         export OS_PASSWORD=${{ secrets.PASSWORD }}
#         export OS_REGION_NAME=${{ secrets.REGION_NAME }}
#         if [ -z "$OS_REGION_NAME" ]; then unset OS_REGION_NAME; fi
#         export OS_INTERFACE=public
#         export OS_IDENTITY_API_VERSION=3
#         openstack coe cluster list
#         openstack coe cluster show ${{ secrets.CLUSTER_NAME }}
#         $(openstack coe cluster config ${{ secrets.CLUSTER_NAME }}) &
   
   - name: Kubectl
     run: |
       sudo apt-get update && sudo apt-get install -y apt-transport-https
       curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
       echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list
       sudo apt-get update
       sudo apt-get install -y kubectl
       export KUBECONFIG=./config
       kubectl get pods --all-namespaces
       kubectl create secret docker-registry demo-k8s-secret --docker-username ${{ secrets.DOCKER_USERNAME }} --docker-password ${{ secrets.DOCKER_PASSWORD }} --docker-server docker.pkg.github.com --dry-run -o yaml | kubectl apply -f -
       sudo add-apt-repository ppa:rmescandon/yq
       sudo apt update
       sudo apt install yq -y
       sha=${GITHUB_SHA:0:7}
       app="${GITHUB_REPOSITORY#*/}"
       yq w ./deployment.yaml spec.template.spec.containers[0].image docker.pkg.github.com/$GITHUB_REPOSITORY/$app:$sha | kubectl apply -f -
       kubectl get pods --all-namespaces
       kubectl get deployments --all-namespaces
       kubectl get svc --all-namespaces
       
#    - uses: azure/k8s-actions/k8s-set-context@master
#      with:
#        kubeconfig: $KUBE_CONFIG
   
#    - uses: azure/k8s-actions/k8s-create-secret@master
#      with:
#         container-registry-url: docker.pkg.github.com
#         container-registry-username: ${{ secrets.DOCKER_USERNAME }}
#         container-registry-password: ${{ secrets.DOCKER_PASSWORD }}
#         secret-name: demo-k8s-secret
   
#    - uses: azure/k8s-actions/k8s-deploy@master
#      with:
#        manifests: |
#          ./deployment.yaml
#        images: |
#          docker.pkg.github.com/$GITHUB_REPOSITORY/$app:$sha
#        imagepullsecrets: |
#          demo-k8s-secret
         
#     runs-on: ubuntu-latest
#     steps:
#     - name: Publish to Registry
#       uses: elgohr/Publish-Docker-Github-Action@master
#       with:
#         name: docker.pkg.github.com/olegchorny/bookinfo-productpage/bookinfo-productpage
#         username: ${{ secrets.DOCKER_USERNAME }}
#         password: ${{ secrets.DOCKER_PASSWORD }}
